=========================================
When running netbox call on remote server
=========================================
debug.sourcefile() => cdata<void *>: NULL; nil
debug.sourcedir() => .; nil
==================================
When running lua code from console
==================================
Exec: tarantool -e "print(debug.sourcefile()); os.exit(0)"
nil
Exec: tarantool -e "print(debug.sourcedir()); os.exit(0)"
.
Exec: tarantool -e "print(debug.__file__); os.exit(0)"
nil
Exec: tarantool -e "print(debug.__dir__); os.exit(0)"
.
Exec: tarantool -e "print(require('net.box').self:call('debug.sourcefile')); os.exit(0)"

Exec: tarantool -e "print(require('net.box').self:call('debug.sourcedir')); os.exit(0)"
.
Exec: tarantool -e "fn = function() return debug.__file__ end; print(require('net.box').self:call('fn')); os.exit(0)"

Exec: tarantool -e "fn = function() return debug.__dir__ end; print(require('net.box').self:call('fn')); os.exit(0)"
.
Exec: tarantool -e "fn = function() local res = debug.sourcefile(); return res end; print(require('net.box').self:call('fn')); os.exit(0)"

Exec: tarantool -e "fn = function() local res = debug.sourcedir(); return res end; print(require('net.box').self:call('fn')); os.exit(0)"
.
Exec: tarantool -e "print(loadstring('return debug.sourcefile()')()); os.exit(0)"
nil
Exec: tarantool -e "print(loadstring('return debug.sourcedir()')()); os.exit(0)"
.
Exec: tarantool -e "print(loadstring('return debug.__file__')()); os.exit(0)"
nil
Exec: tarantool -e "print(loadstring('return debug.__dir__')()); os.exit(0)"
.
Exec: tarantool -e "print(loadstring('local res = debug.sourcefile(); return res')()); os.exit(0)"
nil
Exec: tarantool -e "print(loadstring('local res = debug.sourcedir(); return res')()); os.exit(0)"
.
======================================
When running lua code from script file
======================================
Exec: tarantool debug/test.lua
==============================
Source: print(debug.sourcefile())
debug/test.lua
Source: print(debug.sourcedir())
debug
Source: print(debug.__file__)
debug/test.lua
Source: print(debug.__dir__)
debug
Source: print(require('net.box').self:call('debug.sourcefile'))

Source: print(require('net.box').self:call('debug.sourcedir'))
.
Source: fn = function() return debug.__file__ end; print(require('net.box').self:call('fn'))
debug/test.lua
Source: fn = function() return debug.__dir__ end; print(require('net.box').self:call('fn'))
debug
Source: fn = function() local res = debug.sourcefile(); return res end; print(require('net.box').self:call('fn'))
debug/test.lua
Source: fn = function() local res = debug.sourcedir(); return res end; print(require('net.box').self:call('fn'))
debug
Source: print(loadstring('return debug.sourcefile()')())
debug/test.lua
Source: print(loadstring('return debug.sourcedir()')())
debug
Source: print(loadstring('return debug.__file__')())
nil
Source: print(loadstring('return debug.__dir__')())
.
Source: print(loadstring('local res = debug.sourcefile(); return res')())
nil
Source: print(loadstring('local res = debug.sourcedir(); return res')())
.
